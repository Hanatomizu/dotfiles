###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
### Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
### Initialization code that may require console input (password prompts, [y/n]
### confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
### Lines configured by zsh-newuser-install
HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000
setopt autocd beep extendedglob nomatch notify
bindkey -v
### End of lines configured by zsh-newuser-install
###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
### Auto Completion and colors
autoload -Uz compinit
zstyle ':completion:*' menu select=0
zmodload zsh/complist
zstyle ':completion:*' format '> %d'
compinit
_comp_options+=(globdots)
autoload -U colors && colors
#export PROMPT="%{$fg[blue]%}%B[%b%{$fg[cyan]%}%n%{$fg[grey]%}%B@%b%{$fg[cyan]%}%m%{$fg[blue]%}%B]-%b%{$fg[blue]%}%B[%b%{$fg[white]%}%~%{$fg[blue]%}%B]%b 
#%{$fg[cyan]%}%B\$%b%{$reset_color%} "
#export RPROMPT="%F{red}%(?..%?)%f"
setopt correct
###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode lucid for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust
# End of Zinit's installer chunk
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
### User Aliases
alias vi='vim'
alias l='ls --color=auto'
alias ls='ls --color=auto'
alias ll='ls --color=auto -lh'
alias la='ls --color=auto -alh'
alias rm='rm -i'
alias mv='mv -i'
###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
### Zinit Configures
## The function of the theme of syntax highlighting
function zsh-syntax-highlighting-theme-loading() {
	ZSH_HIGHLIGHT_STYLES[default]='none'
	ZSH_HIGHLIGHT_STYLES[unknown-token]='fg=red,bold'
	ZSH_HIGHLIGHT_STYLES[reserved-word]='fg=yellow'
	ZSH_HIGHLIGHT_STYLES[suffix-alias]='fg=cyan,underline'
	ZSH_HIGHLIGHT_STYLES[precommand]='fg=cyan,underline'
	ZSH_HIGHLIGHT_STYLES[commandseparator]='fg=magenta'
	ZSH_HIGHLIGHT_STYLES[path]='fg=blue,underline'
	ZSH_HIGHLIGHT_STYLES[path_pathseparator]=''
	ZSH_HIGHLIGHT_STYLES[path_prefix_pathseparator]=''
	ZSH_HIGHLIGHT_STYLES[globbing]='fg=blue'
	ZSH_HIGHLIGHT_STYLES[history-expansion]='fg=blue'
	ZSH_HIGHLIGHT_STYLES[command-substitution]='none'
	ZSH_HIGHLIGHT_STYLES[command-substitution-delimiter]='fg=magenta'
	ZSH_HIGHLIGHT_STYLES[process-substitution]='none'
	ZSH_HIGHLIGHT_STYLES[process-substitution-delimiter]='fg=magenta'
	ZSH_HIGHLIGHT_STYLES[single-hyphen-option]='fg=green'
	ZSH_HIGHLIGHT_STYLES[double-hyphen-option]='fg=green'
	ZSH_HIGHLIGHT_STYLES[back-quoted-argument]='none'
	ZSH_HIGHLIGHT_STYLES[back-quoted-argument-delimiter]='fg=magenta'
	ZSH_HIGHLIGHT_STYLES[single-quoted-argument]='fg=yellow'
	ZSH_HIGHLIGHT_STYLES[double-quoted-argument]='fg=yellow'
	ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument]='fg=yellow'
	ZSH_HIGHLIGHT_STYLES[rc-quote]='fg=cyan'
	ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]='fg=cyan'
	ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]='fg=cyan'
	ZSH_HIGHLIGHT_STYLES[back-dollar-quoted-argument]='fg=cyan'
	ZSH_HIGHLIGHT_STYLES[assign]='none'
	ZSH_HIGHLIGHT_STYLES[redirection]='none'
	ZSH_HIGHLIGHT_STYLES[comment]='fg=black,bold'
	ZSH_HIGHLIGHT_STYLES[named-fd]='none'
	ZSH_HIGHLIGHT_STYLES[arg0]='fg=cyan'
}

## Load
zinit light-mode lucid wait'0' for \
	atload'_zsh_autosuggest_start' zsh-users/zsh-autosuggestions \
	atload'zsh-syntax-highlighting-theme-loading' zsh-users/zsh-syntax-highlighting \
	skywind3000/z.lua

zinit ice depth=1
zinit light romkatv/powerlevel10k

## OMZ libraries
zinit lucid for \
    OMZ::lib/git.zsh \
    OMZ::lib/completion.zsh \
    OMZ::lib/history.zsh \
    OMZ::lib/key-bindings.zsh \
    OMZ::lib/clipboard.zsh \
    OMZ::lib/theme-and-appearance.zsh \
	OMZ::lib/functions.zsh \
	OMZ::lib/termsupport.zsh

## OMZ plugins
zinit lucid wait'0' for \
    OMZP::sudo/sudo.plugin.zsh
###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
### Applications Configures
export EDITOR='vim'
export SUDO_EDITOR='nvim'

### Load the full version of powerlevel10k ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

### conda initialize
function conda_env_load(){
    __conda_setup="$('/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
    if [ $? -eq 0 ]; then
        eval "$__conda_setup"
    else
        if [ -f "/opt/miniconda3/etc/profile.d/conda.sh" ]; then
            . "/opt/miniconda3/etc/profile.d/conda.sh"
        else
            export PATH="/opt/miniconda3/bin:$PATH"
        fi
    fi
    unset __conda_setup
}
zinit wait lucid as'null' id-as'conda' atload"conda_env_load" for zdharma-continuum/null
###>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

